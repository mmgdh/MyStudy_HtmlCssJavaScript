@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    <script>
        console.log("---------------12.1.2 窗口关系-----------------");
        console.log("top对象始终指向最上层（最外层）窗口，即浏览器窗口本身。" + window.top);
        console.log("parent对象则始终指向当前窗口的父窗口" + window.parent);
        console.log("---------------12.1.3 窗口位置与像素比-----------------");
        console.log("屏幕左侧:" + window.screenLeft + " 屏幕顶部:" + window.screenTop);

        function Move() {//视浏览器情况可能禁用
            console.log("Click");
            window.moveTo(50, 100);//窗口移动到50，100
            window.moveBy(50, 100);//窗口向右50向下移动100，
            window.moveTo(-50, 100);//窗口向左移动50向下移动100，
        }
        console.log("物理像素与CSS像素之间的转换比率:" + window.devicePixelRatio);
        console.log("---------------12.1.4 窗口大小-----------------")
        console.log("浏览器窗口自身的大小（不管是在最外层window上使用，还是在窗格<frame>中使用）" + outerHeight + ":高|宽:" + outerWidth);
        console.log("浏览器窗口中页面视口的大小（不包含浏览器边框和工具栏） " + innerHeight + ":高|宽:" + innerWidth);
        console.log("返回页面视口的宽度和高度。" + document.documentElement.clientHeight + "高|宽" + document.documentElement.clientWidth);
        console.log("---------------12.1.5 视口位置---------------")
        console.log("度量文档相对于视口滚动距离的属性有两对[" + window.pageXoffset + "," + window.scrollX + "][" + window.pageYOffset + "," + window.scrollY + "]")
        function Scroll() {
            //window.scrollTo(0, 500);//移动到0，500
            //window.scrollBy(0, 500);//向下移动500
            window.scrollTo({
                left: 100,
                top: 500,
                behavior: 'smooth'//平滑滚动
            })
        }
        console.log("---------------12.1.6 导航与打开新窗口---------------")
        //window.open()接收4个参数：要加载的URL、目标窗口、特性字符串和表示新窗口在浏览器历史记录中是否替代当前加载页面的布尔值
        let OpenedWin = window.open("http://www.baidu.com", "mmgdh", "height=400,width=400,top=10,left=10,resizable=yes");//打开一个可缩放的新窗口，大小为400像素×400像素，位于离屏幕左边及顶边各10像素的位置。
        OpenedWin.resizeTo(50, 50)//缩放
        OpenedWin.moveTo(100, 100);//移动
        console.log(OpenedWin.opener);//指向调用window.open()打开它的窗口或窗格的指针
        OpenedWin.opener = null;//脱离联系，设置为独立的进程
        OpenedWin.close()//关闭
        console.log("---------------12.1.7 定时器---------------");
        let TimeOutId = setTimeout(() => alert("Hello world! ", 1000));
        clearTimeout(TimeOutId);//取消定时器

        //推荐使用，setInteval一般不推荐在生产库使用
        function InitInteval() {
            let num = 0;
            let max = 10;
            let incrementNumber = function () {
                num++;
                if (num < max) {
                    setTimeout(incrementNumber, 5000);
                } else {
                    alert("Done");
                }
            }
            setTimeout(incrementNumber, 500);
        }
        function btnConfirm() {
            if (confirm("Are you sure?")) {
                console.log("User Choose Yes");
            }
            else {
                console.log("User Choose No");
            }
        }
        function btnPrompt() {
            let result = prompt("What is your name?", "");
            if (result != null) {
                console.log("Welcome " + result);
            }
        }
        console.log("---------------12.2 location对象---------------");
        let getQueryStringArgs = function () {
            //取得没有开头问号的查询字符串
            let qs = (location.search.length > 0 ? location.search.substring(1) : ""),
                args = {};
            for (let item of qs.split("&").map(kv => kv.split("="))) {
                let name = decodeURIComponent(item[0]),
                    value = decodeURIComponent(item[1]);
                if (name.length) {
                    args[name] = value;
                }
            }
            return args;
        }
        let qs = "?q=JavaScript&Num=10";
        let searchParams = new URLSearchParams(qs);
        console.log(searchParams.toString());
        console.log(searchParams.has("Num"));
        console.log(searchParams.get("Num"));
        searchParams.set("Page", "3")
        console.log(searchParams.toString());
        searchParams.delete("q")
        console.log(searchParams.toString());
        console.log("---------------12.2.2 操作地址---------------")
        //hash、search、hostname、pathname和port属性被设置为新值之后都会修改当前URL
        function changeUrl() {
            //location.hash = "#section1";
            //location.pathname = "MMGDHTest";
            //location.search = "? a=123";
            location.hostname = "www.somewhere.com";
            //location.pathname = "mydir";
            //location.port = 8080;
        }
        function ToBaiDu() {
            //已下三个效果一样
            //location.assign('http://www.baidu.com');
            //window.location = "http://www.baidu.com";
            location.href = "http://www.baidu.com";
        }
        function ReplaceUrl() {
            location.replace("http://www.baidu.com");
        }
        console.log("---------------12.3 navigator对象---------------");
        //判断是否有安装某插件
        let hasPlugin = function (name) {
            name = name.toLowerCase();
            for (let plugin of window.navigator.plugins) {
                if (plugin.name.toLowerCase().indexOf(name) > -1) {
                    return true;
                }
            }
            return false;
        }
        console.log(hasPlugin("Flash"));//检测Flash
        console.log(hasPlugin("PDF Viewer"));//检测PDF Viewer
        //console.log(window.navigator.plugins);//检测QuickTime
        console.log("---------------12.4 screen对象---------------");
        console.log("---------------12.5 history对象---------------");
        let stateObject = { foo: "bar" };
        //pushState方法接收3个参数：一个state对象、一个新状态的标题和一个（可选的）相对URL。
        history.pushState(stateObject, "My title", "baz.html");
        window.addEventListener('popstate', (event) => {
            let state = event.state;
            if (state) {
                processState(state);
            }
        })
        history.replaceState({ newFoo: "newBar" }, "New title");//(没懂)
    </script>
    
    <body style="height:2000px">
        <button onclick="Scroll()"></button>
        <button onclick="btnConfirm()">confim</button>
        <button onclick="btnPrompt()">Prompt</button>
        <button onclick="window.print();">Print</button>
        <button onclick="window.find();">Find</button>
        <button onclick="ToBaiDu()">跳转到百度</button>
        <button onclick="changeUrl()">修改URL</button>
        <button onclick="location.reload()">刷新</button>
        <button onclick="ReplaceUrl()">Replace</button>@*点击后无法回退*@
        <button onclick="history.go(-1)">后退</button>
        <button onclick="history.go(1)">前进</button>
        <button onclick="history.go(2)">前进两页</button>
    </body>
}
  